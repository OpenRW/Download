<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="adf" xml:space="preserve">
    <value>(.adf) 收音机音频文件</value>
  </data>
  <data name="cfg" xml:space="preserve">
    <value>(.cfg)配置文件</value>
  </data>
  <data name="col" xml:space="preserve">
    <value>(.col)碰撞文件</value>
  </data>
  <data name="dat" xml:space="preserve">
    <value>(.dat)数据文件</value>
  </data>
  <data name="dff" xml:space="preserve">
    <value>(.dff)模型文件</value>
  </data>
  <data name="gxt" xml:space="preserve">
    <value>(.gxt)文本文件</value>
  </data>
  <data name="ide" xml:space="preserve">
    <value>(.ide)条目定义文件</value>
  </data>
  <data name="ifp" xml:space="preserve">
    <value>(.ifp)动画文件</value>
  </data>
  <data name="img" xml:space="preserve">
    <value>(.img)封包文件</value>
  </data>
  <data name="ipl" xml:space="preserve">
    <value>(.ipl)地图位置文件</value>
  </data>
  <data name="lblATR" xml:space="preserve">
    <value> 从</value>
  </data>
  <data name="noFiDES" xml:space="preserve">
    <value>没有找到 </value>
  </data>
  <data name="noFiTXT" xml:space="preserve">
    <value> 指定的文件夹不包含该文件</value>
  </data>
  <data name="noFoDES" xml:space="preserve">
    <value>文件夹没有找到</value>
  </data>
  <data name="noFoTXT" xml:space="preserve">
    <value>指定的文件夹不存在！</value>
  </data>
  <data name="noInetACC" xml:space="preserve">
    <value>你没有连接到互联网！</value>
  </data>
  <data name="notFoundTWO" xml:space="preserve">
    <value>这个IMG类型还没有支持！</value>
  </data>
  <data name="pls1ST" xml:space="preserve">
    <value>请选择你的 </value>
  </data>
  <data name="plsLST" xml:space="preserve">
    <value> 目录！</value>
  </data>
  <data name="raw" xml:space="preserve">
    <value>(.raw) SFX档案文件</value>
  </data>
  <data name="rep" xml:space="preserve">
    <value>(.rep)回放文件</value>
  </data>
  <data name="scm" xml:space="preserve">
    <value>(.scm) 任务脚本文件</value>
  </data>
  <data name="sdt" xml:space="preserve">
    <value>(.sdt) SFX目录文件</value>
  </data>
  <data name="txd" xml:space="preserve">
    <value>(.txd) 纹理档案文件</value>
  </data>
  <data name="unk" xml:space="preserve">
    <value>未知文件</value>
  </data>
  <data name="updAvaDES" xml:space="preserve">
    <value>可用更新</value>
  </data>
  <data name="updAvaTXT" xml:space="preserve">
    <value>有新版本OpenRW可用。下载并安装？下载完成后现有程序将退出。</value>
  </data>
  <data name="updBRK" xml:space="preserve">
    <value>更新参数似乎损坏了。</value>
  </data>
  <data name="updNotNEC" xml:space="preserve">
    <value>你已经运行最新版本。</value>
  </data>
</root>